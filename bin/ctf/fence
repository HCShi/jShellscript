#!/usr/bin/python
# coding: utf-8

##################################################################
# argparse
##################################################################
import argparse
parser = argparse.ArgumentParser(
    prog="fence",
    formatter_class=argparse.RawDescriptionHelpFormatter,  # 没有这句话, 换行会过滤掉
    description='''\
        Usage Example:
        --------------------------------
            fence fsf5lrdwacloggwqi11l  # default step from 2 to 20
            fence fsf5lrdwacloggwqi11l --step 15  # set step from 2 to 15, the num of step can beyond the length of string
        ''')
parser.add_argument('string', nargs='?', help='decode the string of fence')
parser.add_argument('--step', type=int, help='set the step of fence decoding to [2, step), default is [2, 20)')
parser.add_argument('--autho', action='store_const', const='14thCoder', help='show the autho')
parser.add_argument('--version', action='version', version='%(prog)s 1.0')
args = parser.parse_args()

##################################################################
# fence algorithm
##################################################################
def fence(s, lstep):
    res = []
    for step in range(2, lstep):
        a = []
        for i in range(step):
            a.append(s[i:len(s):step])
        res.append(''.join(a))
    return res

##################################################################
# main
##################################################################
if __name__ == "__main__":
    if args.autho:
        print args.autho

    # for i in fence('fsf5lrdwacloggwqi11l', 20):
    #     print i
    step = 20
    if args.step:
        step = args.step
    if args.string:
        if step > len(args.string):
            step = len(args.string)
        for i in fence(args.string, step):
            print i
