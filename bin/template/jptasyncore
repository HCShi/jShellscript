#!/usr/bin/python
#coding: utf-8

##################################################################
# argparse
##################################################################
import argparse
parser = argparse.ArgumentParser(
    prog="jptasyncore",
    formatter_class=argparse.RawDescriptionHelpFormatter,  # 没有这句话, 换行会过滤掉
    description='''\
        Usage Example:
        --------------------------------
        jsocket
        jsocket --easy
        jsocket --hard
        jsocket -l1
        jsocket -l2  # 多线程
        # 以上格式经测试正确, 其它格式出错了我不背锅

        --------------------------------
        仔细体会吧
        ''')
parser.add_argument('--easy', action='store_true', help='python simple socket [default]')
parser.add_argument('-l1', action='store_true', help='same to easy')

parser.add_argument('--autho', action='store_const', const='14thCoder', help='show the autho')
parser.add_argument('--version', action='version', version='%(prog)s 1.0')
args = parser.parse_args()

##################################################################
# function
##################################################################
import os
user_path = os.path.expanduser('~')  # '/home/coder352'
from configparser import ConfigParser  # 读配置文件
cfg = ConfigParser()
cfg.read(user_path + '/github/jShellscript/bin/template/config.ini')
path = cfg.get('PATH', 'current_path')
separator = cfg.get('MISC', 'separator')
def l1():
    print separator + ' Server'
    f = open(path + '/src/jptasyncore/l1_server.py')
    for line in f.readlines()[2:]:  # 去掉开头两行相同的
        print ' ' * 4 + line,
    print
    print separator + ' Client'
    f = open(path + '/src/jptasyncore/l1_client.py')
    for line in f.readlines()[2:]:
        print ' ' * 4 + line,
def l2():
    pass

##################################################################
# main
##################################################################
import sys
if __name__ == "__main__":
    if args.autho:
        print args.autho

    if len(sys.argv) == 1:
        l1()
        exit(0)
    if args.l1:
        l1()
        exit(0)
    if args.easy:
        l1()
        exit(0)
