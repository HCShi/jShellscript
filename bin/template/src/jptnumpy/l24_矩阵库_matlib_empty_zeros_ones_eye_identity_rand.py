#!/usr/bin/python3
# coding: utf-8
# NumPy 包含一个 Matrix 库 numpy.matlib, 此模块的函数返回矩阵而不是返回 ndarray 对象
import numpy.matlib
import numpy as np
##################################################################
# numpy.matlib.empty(shape, dtype, order); 返回一个新的矩阵, 而不初始化元素; 填充为随机数据
# shape 定义新矩阵形状的整数或整数元组; Dtype 可选, 输出的数据类型; order C 或者 F
print(np.matlib.empty((2, 2)))  # [[ 2.12199579e-314,   4.24399158e-314] [ 4.24399158e-314,   2.12199579e-314]]
##################################################################
# numpy.matlib.zeros(); 此函数返回以零填充的矩阵
print(np.matlib.zeros((2, 2)))  # [[ 0.  0.] [ 0.  0.]])
##################################################################
# numpy.matlib.ones(); 此函数返回以一填充的矩阵
print(np.matlib.ones((2, 2)))  # [[ 1.  1.] [ 1.  1.]]
##################################################################
# numpy.matlib.eye(n, M=n,k, dtype); 这个函数返回一个矩阵, 对角线元素为 1, 其他位置为零
# n 返回矩阵的行数; M 返回矩阵的列数, 默认为 n; k 对角线的索引; dtype 输出的数据类型
print(np.matlib.eye(n=3, M=4, k=0, dtype=float))  # [[ 1.  0.  0.  0.] [ 0.  1.  0.  0.] [ 0.  0.  1.  0.]])
##################################################################
# numpy.matlib.identity(); 返回给定大小的单位矩阵, 单位矩阵是主对角线元素都为 1 的方阵
print(np.matlib.identity(3, dtype=float))  # [[ 1.  0.  0.] [ 0.  1.  0.] [ 0.  0.  1.]]
##################################################################
# ·numpy.matlib.rand(); 函数返回给定大小的填充随机值的矩阵
print(np.matlib.rand(3, 3))  # [[ 0.82674464  0.57206837  0.15497519] [ 0.33857374  0.35742401  0.90895076] [ 0.03968467  0.13962089  0.39665201]]
