#!/usr/bin/python3
# coding: utf-8
import numpy as np
##################################################################
## corrcoef
a, b = np.array([1, 2, 3, 4]), np.array([2, 3, 4, 5])
print(np.corrcoef(a, b))  # 两行, 所以结果是结果 2x2
# [[ 1.  1.]  # 主对角线是每行和自己, 其他是对应的行列之间的关系, R(X_i, X_j)
#  [ 1.  1.]]
##################################################################
## corrcoef 高级用法
a = np.array([[1, 1, 2, 2, 3], [2, 2, 3, 3, 5], [1, 4, 2, 2, 3]])
print(np.corrcoef(a))  # 计算行与行之间的相关系数, 结果 3x3
# array([[ 1.   ,  0.976,  0.105],
#        [ 0.976,  1.   ,  0.179],
#        [ 0.105,  0.179,  1.   ]])
print(np.corrcoef(a, rowvar=0))  # 计算各列之间的相关系数, 输出为相关系数矩阵, 结果 5x5
# array([[ 1.   , -0.189,  1.   ,  1.   ,  1.   ],
#        [-0.189,  1.   , -0.189, -0.189, -0.189],
#        [ 1.   , -0.189,  1.   ,  1.   ,  1.   ],
#        [ 1.   , -0.189,  1.   ,  1.   ,  1.   ],
#        [ 1.   , -0.189,  1.   ,  1.   ,  1.   ]])
##################################################################
## 应用公式 0.5*value+0.5 可以将相关系数矩阵的值域由 [-1, 1] 映射为 [0, 1]
print(np.corrcoef(a)*0.5 + 0.5)
# array([[ 1.   ,  0.988,  0.552],
#        [ 0.988,  1.   ,  0.59 ],
#        [ 0.552,  0.59 ,  1.   ]])
