#!/bin/bash
# 因为 zsh 没有默认的配置文件，一般都是把 oh-my-zsh 中的直接扒下来，所以没有备份
echo "正在初始化配置......"
path=`pwd`
if [ ! -e $HOME/.config/shellscript ];then mkdir -p $HOME/.config/shellscript;fi
cp ./zshrc ~/.zshrc
cp ./mybashrc ./myscript ./myzshrc $HOME/.config/shellscript
echo "初始化配置结束....."

##################################################################
## 使用 Zsh 的十个理由 by 伯乐在线 http://blog.jobbole.com/28829/
##################################################################
# 理由 1：zsh 的补全模式更方便
# 	zsh 中按两下 tab 键可以触发 zsh 的补全，所有待补全项都可以通过键盘方向键或者 <Ctrl-n/p/f/b> 来选择。

# 理由 2：zsh 支持命令选项补全
#	zsh 除了支持目录的补全，还支持命令选项的补全，例如 ls -<TAB><TAB> 会直接列出所有 ls 的参数，再也不会出现一个命令打到一半，忘记参数导致重开一个 terminal man 一把。

# 理由 3：zsh 支持命令参数补全
# 	以前想 kill 掉一个进程，我的做法是 ps aux | grep "进程名" 然后记下 id，再 kill id。在 zsh 下，
# 	只需要 kill 进程名<TAB>，zsh 就会自动补全进程的 pid。
# 	其余我常用的补全还有：
# 	·ssh <TAB><TAB> 时 zsh 会自动列出你访问过的主机和用户名来补全 ssh 的参数。
# 	·brew install <TAB><TAB> 来补全软件包名，除了 homebrew 以外，同样支持 port/apt-get 等其他包管理器。

# 理由 4：zsh 支持更加聪明的目录补全
# 	以前比如想进入一个比较深的目录，比如 /Users/pw/workspace/project/src/main/webapps/static/js，
#	就得在 bash 下面打半天，不停的 tab 去补全一个正确的路径出来。在 zsh 下，只需要输入每个路径的头字母
# 	然后 tab 一下： cd /u/p/w/p/s/m/w/s/j<TAB>

# 理由 5：zsh 强大的快速目录切换
# 	以前最苦逼的事情莫过于频繁在两个工作目录下切换，总要打一长串 cd 路径。也尝试过 popd 和 pushd 来解决这个问题，
#	但往往是目录已经切换了才想起来没用 pushd。而 zsh 会记住你每一次切换的路径，
#	然后通过 1 来切换到你上一次访问的路径，2 切换到上上次……一直到 9，还可以通过 d 查看目录访问历史。
#	* 输入 d，即可列出你在这个会话里访问的目录列表，输入列表前的序号，即可直接跳转
#   zsh 还可以配合 autojump 一起使用，autojump 会记录下每一个你访问过的目录，然后通过 j 来快速跳转。
#   支持 自动不全 和 模糊匹配 , 例如你访问过hadoop-1.0.0目录，
#   * 输入j hado 即可正确跳转。
#   j –stat 可以看你的历史路径库
#   * 在当前目录下输入 .. 或 … ，或直接输入当前目录名都可以跳转

# 理由 6：zsh 支持全局 alias 和后缀名 alias
#	bash 的 alias 只能做命令的缩写，而 zsh 更进一步，使 alias 可以缩写命令的一部分，例如参数或环境变量设置。
:<<!EOF!
$ alias -s log=less
$ ~/package/tomcat/log/catalina.log # 相当于 less ~/package/tomcat/log/catalina.log
$ alias -g PR=http_proxy=127.0.0.1:8087
$ PR curl https://twitter.com # 相当于 http_proxy=127.0.0.1:8087 curl https://twitter.com
!EOF!

# 理由 7：zsh 有着丰富多彩的命令行提示符
#	bash 下通过设置 $PS1 已经可以实现很丰富的提示符了，而 zsh 更进一步，可以实现诸如多行提示符、提示符右对齐等功能。
#	oh-my-zsh 配置文件中提供了非常丰富的提示符 theme 供选择，我使用的是 gentoo 主题，比较简洁，
# 	还可以显示当前 git 仓库的状态。

# 理由 8：zsh 有更多优雅的语法
#	例如修改 PATH，bash 下设置 $PATH 要求所有路径都要写在一行里，目录多了以后看起来就很难看。
#	zsh 支持更加符合程序员审美观的设置方式。
:<<!EOF!
path=(
    ~/bin
    $path
    ~/package/smartsprites/bin
)
!EOF!

# 理由 9：强大的历史纪录功能，输入 grep 然后用上下箭头可以翻阅你执行的所有 grep 命令

# 理由 10：通配符搜索：ls -l **/*.sh，可以递归显示当前目录下的 shell 文件，文件少时可以代替 find，文件太多就歇菜了
