#!/bin/bash

##################################################################
## /etc/bash.bashrc
##################################################################
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib
export PATH=/home/${USER}/github/shellscript/bin:$PATH
export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
export PATH=/usr/local/texlive/2016/bin/x86_64-linux:$PATH
# export EDITOR=vim  # 加上这个以后好多 emacs 的快捷键用不了

##################################################################
## UTF8
##################################################################
LANG="en_US.UTF-8"
LC_COLLATE="en_US.UTF-8"
LC_CTYPE="en_US.UTF-8"
LC_MESSAGES="en_US.UTF-8"
LC_MONETARY="en_US.UTF-8"
LC_NUMERIC="en_US.UTF-8"
LC_TIME="en_US.UTF-8"
LC_ALL="en_US.UTF-8"

##################################################################
## Tmux 每次登陆进入到tmux
##################################################################
cmd=$(which tmux) # tmux path
if [ -z $cmd ]; then  # 判断是否已有开启的tmux会话，没有则开启
    echo "You need to install tmux."
    exit 1
fi
session=`whoami`  # session name
$cmd has -t $session  # has-session 不存在会报错, 并且返回 1, 存在返回 0
if [ $? != 0 ]; then
    $cmd new -d -n normal -s $session            # 最后的 "" 中的都是命令
    # $cmd splitw -v -p 20 -t $session "pry"  # 创建窗口 1，并分为上下两个窗格，其中上窗格占 80% 空间，运行 Vim，下窗格占 20% 空间，运行 Pry
    # $cmd neww -n mutt -t $session "mutt"    # 创建窗口 2，运行 Mutt
    $cmd att -t $session                      # 第二个终端就不会进入 tmux 了, 最后才能进入 tmux
fi
# 另一种判断 tmux 是否已经运行的方法
# if which tmux 2>&1 >/dev/null; then
#     # test -z "$TMUX" && (tmux attach || tmux_init)  # attach 上以后会自动 sync
#     test -z "$TMUX" && (clear || tmux_init)  # 当打开第二个终端时, 不执行任何操作, tmux_init() 函数中可以写初始化
# fi

##################################################################
## django & virtualenv
##################################################################
export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/workspace
# source /usr/local/bin/virtualenvwrapper.sh

##################################################################
## Go env
##################################################################
export GOPATH=$HOME/workspace
export PATH=$PATH:$GOPATH/bin

##################################################################
## ~/.zshrc see something in jpc/terminal_config
##################################################################
eval `dircolors ~/.dircolors` # 执行的是调用这个脚本的地方的文件，即 ~/.dircolors
# dircolors 是系统自带命令，dircolors文件是自定义的，只要加上这句话，就可以改变ls的颜色，不需要其它软件支持
export TERM=xterm-256color
DEFAULT_USER=`whoami`
export EDITOR=/usr/bin/vim

##################################################################
## Change Title of Terminal
##################################################################
function set-title(){
  if [[ -z "$ORIG" ]]; then
    ORIG=$PS1
  fi
  TITLE="\[\e]2;$*\a\]"
  PS1=${ORIG}${TITLE}
}
# set-title "路尽隐香处 翩然雪海间"
