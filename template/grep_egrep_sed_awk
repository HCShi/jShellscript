##################################################################
## grep egrep sed 
##################################################################
# 参见 Blog: Regular_express_grep_sed.md

##################################################################
## awk (awk + action)
##################################################################
# 读入有'\n'换行符分割的一条记录，然后将记录按指定的域分隔符划分域，填充域，**$0则表示所有域**,$1表示第一个域,$n表示第n个域。
# 默认域分隔符是"空白键" 或 "[tab]键"
# -F 指定分隔符
last -n 5 | awk  '{print $1}'  # 只显示最近登录的5个帐号  
cat /etc/passwd | awk -F ':' '{print $1}'  # 显示/etc/passwd的账户，-F指定域分隔符为':'
cat /etc/passwd |awk  -F ':'  '{print $1"\t"$7}'  # 显示/etc/passwd的账户和账户对应的shell,而账户与shell之间以tab键分割
cat /etc/passwd |awk  -F ':'  'BEGIN {print "name,shell"}  {print $1","$7} END {print "blu,/bin/nosh"}'  # 账户与shell之间以逗号分割，在所有行添加列名name,shell,在最后一行添加"blu,/bin/nosh"
# 先执行BEGING，然后读取文件，读入有/n换行符分割的一条记录，然后将记录按指定的域分隔符划分域，填充域，
# $0则表示所有域,$1表示第一个域,$n表示第n个域,随后开始执行模式所对应的动作action。
# 接着开始读入第二条记录······直到所有的记录都读完，最后执行END操作
awk -F : '/root/' /etc/passwd  # 搜索/etc/passwd有root关键字的所有行
# 这种是pattern的使用示例，匹配了pattern(这里是root)的行才会执行action(没有指定action，默认输出每行的内容)
awk -F : '/^root/' /etc/passwd  # 搜索支持正则，例如找root开头的
awk -F : '/root/{print $7}' /etc/passwd  # 搜索/etc/passwd有root关键字的所有行，并显示对应的shell
awk -F :  '{print "filename:" FILENAME ",linenumber:" NR ",columns:" NF ",linecontent:"$0}' /etc/passwd  # 统计/etc/passwd:文件名，每行的行号，每行的列数，对应的完整行内容
awk -F :  '{printf("filename:%10s,linenumber:%s,columns:%s,linecontent:%s\n",FILENAME,NR,NF,$0)}' /etc/passwd  # 使用printf替代print,可以让代码更加简洁
ifconfig wlan0 | awk '/inet addr/{gsub(/addr:/,"");print $2}'  # 输出无线网IP地址
