#!/bin/bash
# 查看端口使用情况，使用netstat命令。
# 查看已经连接的服务端口（ESTABLISHED
##################################################################
## netstat lsof
##################################################################
# 显示 tcp 传输协议的连线情况
sudo netstat -antp
# -a或--all 显示所有连线中的Socket
# -n或--numeric 直接使用IP地址，而不通过域名服务器
# -t或--tcp 显示TCP传输协议的连线状况
# -u或--udp 显示UDP传输协议的连线状况
# -i或--interfaces 显示网络界面信息表单
# -l或--listening 显示监控中的服务器的Socket
# -p或--programs 显示正在使用Socket的程序识别码和程序名称

# 再 debain 系统下,可以用 dpkg 命令来查看
dpkg -l | grep -i ftp
rpm -qa | grep -i *ftp*  # redhat 用这个
# 查看 21 号端口,ftp端口是否打开,用的是 vsftpd 软件
netstat -tulpn | grep :21
# 显示
# tcp        0      0 0.0.0.0:21             0.0.0.0:*               LISTEN
netstat -a | grep ftp
# 显示
# tcp        0      0 *:ftp                   *:*                     LISTEN

# 查看 MTU 显示网卡列表
netstat -i

# 显示组播组关系
netstat -g

# 显示网络统计信息
netstat -s
　
# 查看所有的服务端口（LISTEN，ESTABLISHED）
sudo netstat -ap

# 查看8080端口，则可以结合grep命令：
sudo netstat -ap | grep 8080

# 如查看8888端口，则在终端中输入：
sudo lsof -i:8888 # 一定要用 sudo 权限
# 这个命令也可以查出是哪个 进程 在占用8888 端口
# 若要停止使用这个端口的程序，使用kill +对应的pid即可

##################################################################
## iptables
##################################################################
# CentOS 配置防火墙操作实例（启、停、开、闭端口）
# 查询防火墙状态:
service   iptables status<回车>
# 停止防火墙:
service   iptables stop <回车>
# 启动防火墙:
service   iptables start <回车>
# 重启防火墙:
service   iptables restart <回车>
# 永久关闭防火墙:
chkconfig   iptables off<回车>
# 永久关闭后启用:
chkconfig   iptables on<回车>

# 查询具体规则
iptables -L -n  # -L 将结果现实到 chain 中, -n 数字形式显示 add port
# 结果类似于下面
:||{
Chain INPUT (policy DROP)
target     prot opt source               destination
ACCEPT     all  --  0.0.0.0/0            0.0.0.0/0
ACCEPT     all  --  0.0.0.0/0            0.0.0.0/0           state RELATED,ESTABLISHED
ACCEPT     tcp  --  0.0.0.0/0            0.0.0.0/0           tcp dpts:6881:6882
ACCEPT     udp  --  202.54.1.254         0.0.0.0/0           udp dpt:514
ACCEPT     tcp  --  0.0.0.0/0            0.0.0.0/0           tcp dpts:80 state NEW,RELATED,ESTABLISHED
LOG        all  --  0.0.0.0/0            0.0.0.0/0           LOG flags 0 level 4
DROP       all  --  0.0.0.0/0            0.0.0.0/0
Chain FORWARD (policy ACCEPT)
target     prot opt source               destination
Chain OUTPUT (policy ACCEPT)
target     prot opt source               destination
ACCEPT     all  --  0.0.0.0/0            0.0.0.0/0
}
# 显示 21 号端口被堵塞
# 添加俩个 iptables moudle
modprobe ip_conntrack
modprobe ip_conntrack_ftp
# Iptables Open FTP Port 21 and 20 # for aliyun 6条命令
iptables -A INPUT -p tcp -s 0/0 --sport 1024:65535 -d 115.28.247.19 --dport 21 -m state --state NEW,ESTABLISHED -j ACCEPT
iptables -A OUTPUT -p tcp -s 115.28.247.19 --sport 21 -d 0/0 --dport 1024:65535 -m state --state ESTABLISHED -j ACCEPT
# reload
iptables -A INPUT -p tcp -s 0/0 --sport 1024:65535 -d 115.28.247.19 --dport 1024:65535 -m state --state ESTABLISHED,RELATED -j ACCEPT
iptables -A OUTPUT -p tcp -s 115.28.247.19 --sport 1024:65535 -d 0/0 --dport 1024:65535 -m state --state ESTABLISHED -j ACCEPT
# 20 号端口
iptables -A OUTPUT -p tcp -s 115.28.247.19 --sport 20 -d 0/0 --dport 1024:65535 -m state --state ESTABLISHED,RELATED -j ACCEPT
iptables -A INPUT -p tcp -s 0/0 --sport 1024:65535 -d 115.28.247.19 --dport 20 -m state --state ESTABLISHED -j ACCEPT
# results
```
Chain INPUT (policy ACCEPT)
target     prot opt source               destination
ACCEPT     tcp  --  0.0.0.0/0            115.28.247.19        tcp spts:1024:65535 dpt:21 state NEW,ESTABLISHED
ACCEPT     tcp  --  0.0.0.0/0            115.28.247.19        tcp spts:1024:65535 dpts:1024:65535 state RELATED,ESTABLISHED
ACCEPT     tcp  --  0.0.0.0/0            115.28.247.19        tcp spts:1024:65535 dpt:20 state ESTABLISHED

Chain FORWARD (policy ACCEPT)
target     prot opt source               destination

Chain OUTPUT (policy ACCEPT)
target     prot opt source               destination
ACCEPT     tcp  --  115.28.247.19        0.0.0.0/0            tcp spt:21 dpts:1024:65535 state ESTABLISHED
ACCEPT     tcp  --  115.28.247.19        0.0.0.0/0            tcp spts:1024:65535 dpts:1024:65535 state ESTABLISHED
ACCEPT     tcp  --  115.28.247.19        0.0.0.0/0            tcp spt:20 dpts:1024:65535 state RELATED,ESTABLISHED
```

##################################################################
## ps faux / ps -elf
##################################################################
sudo ps faux
sudo ps -elf
# 常用命令选项
# a：显示当前终端下的所有进程信息
# u：使用以用户为主的格式输出进程信息
# x：显示当前用户在所有终端下的进程信息
# -e：显示系统内的所有进程信息
# -l：使用长格式显示进程信息
# -f：使用完整的格式显示进程信息
sudo ps -elf | grep nginx  # 显示 nginx 的进程号

##################################################################
## kill
##################################################################
# 以 nginx 为例
# 杀死进程
sudo ps -elf | grep nginx  # 显示 nginx 的进程号
kill -QUIT pid_of_nginx  # 从容停止 nginx
kill -TERM pid_of_nginx  # 快速停止 nginx
kill -INT pid_of_nginx  # 快速停止 nginx
pkill -9 nginx  # 强制停止
sudo nginx -s stop/quit  # 这样也可以停止 nginx
# 重启进程
sudo nginx -s reload  # 或者
ps -ef | grep nginx && kill -HUP pid  # 发送信号重启

##################################################################
## top 查看动态 进程 排名信息
##################################################################
top
# 按P键根据CPU占用情况对进程列表进行排序
# 按M键根据内存占用情况进行排序
# 按N键根据启动时间进行排序

##################################################################
## pgrep 根据特定条件查询进程PID信息
##################################################################
pgrep -l sslocal # 查看 shadowsocks 的进程号
pgrep -Ul coder352 # 查看用户 coder352 的进程信息
pgrep -t sslocal # 根据进程所在的终端进行查找

##################################################################
## pstree 以树型结构显示各进程间的关系
##################################################################
pstree -pua coder352 # 列出 coder352 用户的所有进程树
# -p：列出进程的PID号
# -u：列出进程对应的用户名
# -a：列出进程对应的完整命令

##################################################################
## free 查看系统的内存使用情况
##################################################################
free

