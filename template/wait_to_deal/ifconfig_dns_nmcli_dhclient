##################################################################
## 1. ifconfig
## 以 nginx 配置 虚拟主机为例
##################################################################
### 配置 eth0
ifconfig eth0 192.168.1.9 netmask 255.255.255.0
### 配置 eth0 分设备 配置 虚拟主机
ifconfig eth0:1 192.168.1.7 broadcast 192.168.1.255 netmask 255.255.255.0
ifconfig eth0:2 192.168.1.17 broadcast 192.168.1.255 netmask 255.255.255.0

##################################################################
## SDN 当时官方的主机无法访问网页, 但可以 ping
##################################################################
route -n  # 查看那块网卡通信
sudo ifconfig eth1 mtu 1454

##################################################################
## 配置固定 IP, 机房上机, 将下面四行丢进一个文件里
##################################################################
sudo ifconfig enx00e04c6804e1 172.20.21.159
sudo ifconfig enx00e04c6804e1 netmask 255.255.255.0
sudo route add default gw 172.20.21.254
sudo echo "nameserver 211.87.191.66" >> /etc/resolv.conf
# 正常连接 Auto Ethernet 就可以了, 配置只能从 ifconfig 中的 enx00e04c6804e1 上看到, 右上角看不到
# 可能 enp4s0f2 会占掉路由, 打开 wireshark 看一下是哪个网卡走的流量, sudo ifconfig enp4s0f2 down 将其禁用
# 好像不用配置 DNS, 可以配置为 211.87.191.66, 211.87.191.77(UPC D402)
# 上面是石油大学基础实验楼的配置
# sudo service  networking restart  # 刷新, 上面的配置失效
# 在 /etc/resolv.conf 中修改后下次启动会自动删除, 很适合去机房

##################################################################
## 配置永久固定 IP
##################################################################
sudo vim /etc/network/interfaces  # 进行如下配置
# auto lo
# iface lo inet loopback
# auto enp4s0f2
# iface enp4s0f2 inet static
#     address 172.20.21.157
#     netmask 255.255.255.0
#     gateway 172.20.21.254

##################################################################
## 2. dns
##################################################################
cat /etc/resolvconf

# Dynamic resolv.conf(5) file for glibc resolver(3) generated by resolvconf(8)
#     DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN
nameserver 127.0.1.1

##################################################################
## 3. nmcli
##################################################################
nmcli dev  # 查看当前网络设备
nmcli con  # 会显示已链接的网络设备, 竟然看到了 802-3-ethernet
nmcli dev show | grep dns  # 查看当前的 DNS
nmcli dev show | grep gateway  # 查看当前的网关

##################################################################
## 4. dhclient 没弄成
##################################################################
sudo dhclient –v  # say "hello" to our DHCP server, verbose
# Listening on LPF/wlan0/68:a3:c4:93:47:46
# Sending on   LPF/wlan0/68:a3:c4:93:47:46
# Sending on   Socket/fallback
# DHCPDISCOVER on wlan0 to 255.255.255.255 port 67 interval 4
# DHCPREQUEST on wlan0 to 255.255.255.255 port 67
# DHCPOFFER from 192.168.2.1
# DHCPACK from 192.168.2.1
# RTNETLINK answers: File exists
# bound to 192.168.2.4 -- renewal in 42516 seconds.

sudo dhclient –r -v  # 释放 DHCP lease
sudo vim /etc/dhcp/dhclient.conf  # 添加下面这句话 send dhcp-requested-address 172.18.140.157;
sudo vim /var/lib/dhcp/dhclient.leases  # 这里面写着 lease, 改了也不行
sudo rm /var/lib/dhcp/dhclient.leases
sudo dhclient  # Ubuntu will contact the network’s DHCP server and obtain a new address.
sudo dhclient -4 -d -v -cf /etc/dhcp/dhclient.conf  # 为所有的 if 申请
sudo dhclient -4 -d -v -cf /etc/dhcp/dhclient.conf enx00e04c6804e1  # 为指定 if 申请
